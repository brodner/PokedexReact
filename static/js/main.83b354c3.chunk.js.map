{"version":3,"sources":["pages/Nav.js","pages/PokemonInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","href","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","PokemonInfo","src","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kKAuCeA,EArCH,WACR,OACI,8BACI,sBAAKC,UAAU,+CAAf,UACI,sBAAKA,UAAU,oCAAf,UACI,oBAAIA,UAAU,0BAAd,SACI,mBAAGC,KAAK,IAAID,UAAU,mCAAtB,wBAEJ,qBAAKA,UAAU,gCAAf,SACI,qBAAKA,UAAU,UAAUE,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAYC,MAAM,6BAArF,SAAkH,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,mCAG/L,qBAAIT,UAAU,6DAAd,UACI,oBAAIA,UAAU,0BAAd,SACI,oBAAGC,KAAK,KAAKD,UAAU,0BAAvB,UACI,wCACA,qBAAKA,UAAU,eAAeE,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAYC,MAAM,6BAA1F,SAAuH,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,4JAGpM,oBAAIT,UAAU,OAAd,SACI,oBAAGC,KAAK,KAAKD,UAAU,0BAAvB,UACI,4CACA,qBAAKA,UAAU,eAAeE,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAYC,MAAM,6BAA1F,SAAuH,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,qKAGpM,oBAAIT,UAAU,OAAd,SACI,oBAAGC,KAAK,KAAKD,UAAU,0BAAvB,UACI,yCACA,qBAAKA,UAAU,eAAeE,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAYC,MAAM,6BAA1F,SAAuH,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,yHCOzMC,EAlCK,WAChB,OACI,sBAAKV,UAAU,0BAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,6CAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,oBAAIA,UAAU,2FAAd,uBACA,qBAAKW,IAAK,kEAAmEC,IAAI,GAAGZ,UAAU,2CAElG,qBAAKA,UAAU,8EAAf,SACI,sBAAKA,UAAU,4CAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,sBAAMA,UAAU,QAAhB,iBACA,sBAAMA,UAAU,QAAhB,oBAEJ,sBAAKA,UAAU,uBAAf,UACI,sBAAMA,UAAU,QAAhB,mBACA,sBAAMA,UAAU,QAAhB,oBAEJ,sBAAKA,UAAU,uBAAf,UACI,sBAAMA,UAAU,QAAhB,kBACA,sBAAMA,UAAU,QAAhB,oBAEJ,sBAAKA,UAAU,uBAAf,UACI,sBAAMA,UAAU,QAAhB,iBACA,sBAAMA,UAAU,QAAhB,gCCbba,MAVf,WACE,OACE,8BAGE,cAAC,EAAD,OCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.83b354c3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <div>\r\n            <nav className=\"text-right  col-span-12 md:flex md:flex-row \">\r\n                <div className=\"flex justify-between items-center\">\r\n                    <h1 className=\"font-bold uppercase p-4\">\r\n                        <a href=\"/\" className=\"text-emerald-500 sm:text-red-500\"> Pokedex</a>\r\n                    </h1>\r\n                    <div className=\"px-4 cursor-pointer md:hidden\">\r\n                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" /></svg>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"text-sm hidden md:mt-0 md:flex md:flex-row md:items-center\">\r\n                    <li className=\"py-1 md:justify-between\">\r\n                        <a href=\"/#\" className=\"px-4 flex justify-start\">\r\n                            <span>Home</span>\r\n                            <svg className=\"w-5 h-5 ml-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" /></svg>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"py-1\">\r\n                        <a href=\"/#\" className=\"px-4 flex justify-start\">\r\n                            <span>Regiones</span>\r\n                            <svg className=\"w-5 h-5 ml-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"py-1\">\r\n                        <a href=\"/#\" className=\"px-4 flex justify-start\">\r\n                            <span>Items</span>\r\n                            <svg className=\"w-5 h-5 ml-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" /></svg>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport Nav from './Nav'\r\n\r\nconst PokemonInfo = () => {\r\n    return (\r\n        <div className='font-body text-gray-700'>\r\n            <Nav></Nav>\r\n            <div className=\"grid md:grid-cols-2 px-4 pt-4 shadow-inner\">\r\n                <div className=\"col-span-1 flex flex-col\">\r\n                    <h1 className='font-bold text-4xl px-5 py-3 rounded-lg bg-white text-center uppercase md:mb-6 shadow-md'>Charizard</h1>\r\n                    <img src={'https://assets.pokemon.com/assets/cms2/img/pokedex/full/006.png'} alt=\"\" className='object-cover relative z-10 sm:top-5' />\r\n                </div>\r\n                <div className=\"col-span-1 mx-16 border shadow-lg rounded-xl pt-5 relative -top-28 sm:top-0\">\r\n                    <div className=\"flex flex-wrap gap-40 px-8 justify-center\">\r\n                        <div className=\"text-4xl text-center\">\r\n                            <span className='block'>No.</span>\r\n                            <span className='block'>006</span>\r\n                        </div>\r\n                        <div className=\"text-4xl text-center\">\r\n                            <span className='block'>LEVEL</span>\r\n                            <span className='block'>006</span>\r\n                        </div>\r\n                        <div className=\"text-4xl text-center\">\r\n                            <span className='block'>TYPE</span>\r\n                            <span className='block'>006</span>\r\n                        </div>\r\n                        <div className=\"text-4xl text-center\">\r\n                            <span className='block'>No.</span>\r\n                            <span className='block'>006</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonInfo\r\n","// import TutorialTailwincss from \"./components/tutorialTailwincss\";\n// import Inicio from './pages/inicio'\n// import Pokedex from './pages/pokedex'\nimport PokemonInfo from \"./pages/PokemonInfo\";\n\nfunction App() {\n  return (\n    <div>\n      {/* <Inicio></Inicio> */}\n      {/* <Pokedex></Pokedex> */}\n      <PokemonInfo></PokemonInfo>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}